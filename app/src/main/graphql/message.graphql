mutation SendMessage($recipientId: Int!,
    $message: String!,
    $parentId: Int,
    $hasParentId: Boolean!
) {
    sent: SaveActivityReply(
        activityId: $parentId,
        text: $message
    ) @include(if: $hasParentId) {
        id
        text
        createdAt
        user {
            id
            name
            avatar {
                large
                medium
            }
        }
    }

    sentMessage: SaveMessageActivity(
        recipientId: $recipientId,
        private: true,
        message: $message
    ) @skip(if: $hasParentId) {
        id
        message
        createdAt
        recipient {
            id
            name
            avatar {
                large
                medium
            }
        }
        messenger {
            id
            name
            avatar {
                large
                medium
            }
        }
    }
}

query GetMessages($userId: Int!) {
    page: Page {
        pageInfo {
            total
            perPage
            currentPage
            lastPage
            hasNextPage
        }
        activities(userId: $userId, type: MESSAGE) {
            ... on MessageActivity {
                id
                message
                createdAt
                recipient {
                    id
                    name
                    avatar {
                        large
                        medium
                    }
                }
                messenger {
                    id
                    name
                    avatar {
                        large
                        medium
                    }
                }
                replies {
                    id
                    text
                    createdAt
                    user {
                        id
                        name
                        avatar {
                            large
                            medium
                        }
                    }
                }
            }
        }
    }
}

#Getting the user data.
query UserQuery($id: Int) {
    user:User(id: $id) {
        id
        name
        about(asHtml: false)
        avatar {
            large
            medium
        }
        bannerImage
        mediaListOptions {
            scoreFormat
            rowOrder
            animeList {
                sectionOrder
                splitCompletedSectionByFormat
                customLists
                advancedScoring
                advancedScoringEnabled
            }
            mangaList {
                sectionOrder
                splitCompletedSectionByFormat
                customLists
                advancedScoring
                advancedScoringEnabled
            }
        }
        statistics {
            anime {
                count
                meanScore
                standardDeviation
                minutesWatched
                episodesWatched
                chaptersRead
                volumesRead
            }
            manga {
                count
                meanScore
                standardDeviation
                minutesWatched
                episodesWatched
                chaptersRead
                volumesRead
            }
        }
        isFollowing
        isFollower
        donatorTier
        donatorBadge
        moderatorRoles
        siteUrl
    }
}

mutation SaveMessageActivityMutation($id:Int, $recipientId:Int, $message:String, $private:Boolean) {
    SaveMessageActivity(id:$id, recipientId:$recipientId, message:$message, private:$private) {
        ... onMessageActivity
    }
}
fragment onMessageActivity on MessageActivity {
    id
    recipientId
    messengerId
    type
    replyCount
    message(asHtml:false)
    isLocked
    isSubscribed
    likeCount
    isLiked
    isPrivate
    siteUrl
    createdAt
    recipient {
        ... activityUser
    }
    messenger {
        ... activityUser
    }
    replies {
        ... activityReply
    }
    likes {
        ... activityUser
    }
}

fragment activityReply on ActivityReply {
    id
    userId
    activityId
    text(asHtml:false)
    likeCount
    isLiked
    createdAt
    user {
        ... activityUser
    }
    likes {
        ... activityUser
    }
}
fragment activityUser on User {
    id
    name
    avatar {
        large
        medium
    }
    isFollowing
    isFollower
    donatorTier
    donatorBadge
    moderatorRoles
}